-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MacOSUI"
screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

-- Create main window frame
local window = Instance.new("Frame")
window.Name = "Window"
window.Size = UDim2.new(0, 400, 0, 300)
window.Position = UDim2.new(0.5, -200, 0.5, -150)
window.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
window.BorderSizePixel = 0
window.Parent = screenGui

-- Top bar
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1, 0, 0, 25)
topBar.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
topBar.BorderSizePixel = 0
topBar.Parent = window

-- MacOS close, minimize, maximize buttons
local function createWindowButton(name, color, position)
    local button = Instance.new("Frame")
    button.Name = name
    button.Size = UDim2.new(0, 20, 0, 20)
    button.Position = position
    button.BackgroundColor3 = color
    button.BorderSizePixel = 0
    button.Parent = topBar
    return button
end

local closeButton = createWindowButton("Close", Color3.fromRGB(255, 95, 87), UDim2.new(0, 5, 0.5, -10))
local minimizeButton = createWindowButton("Minimize", Color3.fromRGB(255, 189, 76), UDim2.new(0, 30, 0.5, -10))
local maximizeButton = createWindowButton("Maximize", Color3.fromRGB(39, 201, 63), UDim2.new(0, 55, 0.5, -10))

-- Close functionality
closeButton.MouseEnter:Connect(function()
    closeButton.BackgroundColor3 = Color3.fromRGB(245, 85, 77)
end)
closeButton.MouseLeave:Connect(function()
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 95, 87)
end)
closeButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        window.Visible = false
    end
end)

-- Minimize functionality
minimizeButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        window.Visible = not window.Visible
    end
end)

-- Maximize functionality
maximizeButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if window.Size == UDim2.new(0, 400, 0, 300) then
            window.Size = UDim2.new(1, -100, 1, -100)
        else
            window.Size = UDim2.new(0, 400, 0, 300)
        end
    end
end)

-- Create Tab buttons
local tabFrame = Instance.new("Frame")
tabFrame.Name = "Tabs"
tabFrame.Size = UDim2.new(1, 0, 0, 30)
tabFrame.Position = UDim2.new(0, 0, 0, 25)
tabFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
tabFrame.BorderSizePixel = 0
tabFrame.Parent = window

local tabs = {}

local function createTab(name, tabPos)
    local tab = Instance.new("TextButton")
    tab.Name = name .. "Tab"
    tab.Size = UDim2.new(0, 100, 1, 0)
    tab.Position = UDim2.new(0, tabPos, 0, 0)
    tab.Text = name
    tab.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    tab.Parent = tabFrame
    tabs[name] = tab
end

createTab("Tab1", 0)
createTab("Tab2", 100)
createTab("Tab3", 200)

-- Create Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, 0, 1, -55)
contentFrame.Position = UDim2.new(0, 0, 0, 55)
contentFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = window

-- Button Template
local function createButton(name, position)
    local button = Instance.new("TextButton")
    button.Name = name .. "Button"
    button.Size = UDim2.new(0, 150, 0, 50)
    button.Position = position
    button.Text = name
    button.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    button.Parent = contentFrame
    return button
end

local button1 = createButton("Button1", UDim2.new(0.5, -75, 0, 10))
local button2 = createButton("Button2", UDim2.new(0.5, -75, 0, 70))

-- Toggle Template
local function createToggle(name, position)
    local toggle = Instance.new("TextButton")
    toggle.Name = name .. "Toggle"
    toggle.Size = UDim2.new(0, 150, 0, 50)
    toggle.Position = position
    toggle.Text = name .. " (Off)"
    toggle.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
    toggle.Parent = contentFrame

    local isOn = false
    toggle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isOn = not isOn
            toggle.Text = name .. (isOn and " (On)" or " (Off)")
            toggle.BackgroundColor3 = isOn and Color3.fromRGB(39, 201, 63) or Color3.fromRGB(230, 230, 230)
        end
    end)

    return toggle
end

local toggle1 = createToggle("Toggle1", UDim2.new(0.5, -75, 0, 130))

-- Tab functionality
for tabName, tab in pairs(tabs) do
    tab.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            for otherName, otherTab in pairs(tabs) do
                otherTab.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
            end
            tab.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
            contentFrame:ClearAllChildren() -- Clear the content frame for new tab
            -- Here you can add custom content for each tab dynamically
        end
    end)
end
